<?php


namespace FormationBundle\Repository;

use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\NoResultException;

/**
 * FormationsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FormationsRepository  extends \Doctrine\ORM\EntityRepository
{
    public function topthree($id)
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "SELECT * FROM formations WHERE entreprise_id = :idt ORDER BY Nombres ASC LIMIT 3 ";
        $statement=$em->getConnection()->prepare($RAW_QUERY);

        $statement->bindValue('idt',$id);
        $statement->execute();



    }
    public function topthreee($id)
    {
        {
            $query = $this->getEntityManager()
                ->createQuery('SELECT c FROM FormationBundle:Formations c WHERE c.entreprise =:idd ORDER BY c.nombres ASC  ')
                ->setParameter('idd',$id);
            $query->setMaxResults(3);
            return $result = $query->getResult();
        }


    }
    public function testnombre()
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "UPDATE formations SET  etat_nombres = 2 WHERE Nombres = 0";
        $statement=$em->getConnection()->prepare($RAW_QUERY);

        //  $statement->bindValue('idt',$id);
        $statement->execute();



    }
    public function testdate()
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "UPDATE formations SET  etat_formation = 2 WHERE date_fin < SYSDATE()";
        $statement=$em->getConnection()->prepare($RAW_QUERY);

        //  $statement->bindValue('idt',$id);
        $statement->execute();



    }
    public function afficherpardomaine($domaine){
        $qb =$this->getEntityManager()
            ->createQuery("select c from FormationBundle:Formations c Where c.domaine=:dom")
            ->setParameter('dom',$domaine);
        return $query = $qb->getResult();
    }


    public function findEntitiesByString($str,$id){
        return $this->getEntityManager()
            ->createQuery(
                "SELECT p
                FROM FormationBundle:Formations p
                WHERE p.nom LIKE :str and p.entreprise='$id' "
            )
            ->setParameter('str', '%'.$str.'%')

            ->getResult();
    }
    public function ajoutNbre($id)
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "UPDATE formations SET Nombres =  Nombres - 1 WHERE ref = : idt ";
        $statement=$em->getConnection()->prepare($RAW_QUERY);

        $statement->bindValue('idt',$id);
        $statement->execute();



    }
    public function findEntities($str){
        return $this->getEntityManager()
            ->createQuery(
                "SELECT p
                FROM FormationBundle:Formations p
                WHERE p.nom LIKE :str "
            )
            ->setParameter('str', '%'.$str.'%')

            ->getResult();
    }






}
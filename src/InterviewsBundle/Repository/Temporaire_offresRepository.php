<?php

namespace InterviewsBundle\Repository;

/**
 * Temporaire_offresRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Temporaire_offresRepository extends \Doctrine\ORM\EntityRepository
{
    public function afficherOffres($id)
    {
        $em = $query = $this->getEntityManager();
        $RAW_QUERY = "SELECT o.offre_id,o.lettre_motivation,o.poste,u.username from offres_ent o Join Users u on o.id_condidat=u.id where o.id_entreprise=:idt";
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('idt', $id);
        $statement->execute();
        $result = $statement->fetchAll();
        return $result;
    }


    public function afficherOffress($id,$ent)
    {         $resultat=array();
     /*   foreach ($ent as $ent) {*/
            $em = $query = $this->getEntityManager();
            $RAW_QUERY = "SELECT o.offre_id,o.lettre_motivation,o.poste,u.username from offres_ent o Join Users u on o.id_condidat=u.id where o.id_entreprise=:idt and o.id_condidat not like :ent ";
            $statement = $em->getConnection()->prepare($RAW_QUERY);
            $statement->bindValue(':idt', $id);
            $statement->bindValue('ent', $ent);
            $statement->execute();
            $result = $statement->fetchAll();
            /*array_push($resultat,$result);*/

        /*}*/

        return $result;
    }
    public function afficherOffresss($id)
    {         $resultat=array();
        /*   foreach ($ent as $ent) {*/
        $em = $query = $this->getEntityManager();
        $RAW_QUERY = "SELECT o.offre_id,o.lettre_motivation,o.poste,u.username from offres_ent o Join Users u on o.id_condidat=u.id  where o.id_entreprise=:idt and o.offre_id not IN(SELECT o.offre_id from interview i join offres_ent o ON o.offre_id=i.offre_id where o.id_entreprise=:ide)";
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue(':idt', $id);
        $statement->bindValue(':ide', $id);
        $statement->execute();
        $result = $statement->fetchAll();
        /*array_push($resultat,$result);*/

        /*}*/

        return $result;
    }

        public function afficherEntretiens($id)
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "SELECT i.ref_ent,u.username,o.poste,i.date_ent,i.heure_ent,i.etat from interview i Join offres_ent o on i.offre_id=o.offre_id Join Users u on o.id_condidat=u.id where o.id_entreprise=:idt";
        $statement=$em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('idt',$id);
        $statement->execute();
        $result=$statement->fetchAll();
        return $result;

    }

    public function afficherEval($ref)
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "SELECT e.id,i.ref_ent,e.ref_entretien,u.username,e.evaluation from evaluation e Join interview i on i.ref_ent=e.ref_entretien Join offres_ent o on i.offre_id=o.offre_id Join Users u on o.id_condidat=u.id where i.ref_ent=:ref";
        $statement=$em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('ref',$ref);
        $statement->execute();
        $result=$statement->fetchAll();
        return $result;

    }

    public function Show_eval($id)
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "SELECT e.id,i.ref_ent,e.ref_entretien,u.username,e.evaluation from evaluation e Join interview i on i.ref_ent=e.ref_entretien Join offres_ent o on i.offre_id=o.offre_id Join Users u on o.id_condidat=u.id where o.id_entreprise=:id";
        $statement=$em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue(':id',$id);
        $statement->execute();
        $result=$statement->fetchAll();
        return $result;

    }

    public function afficherEntretiensC($id)
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "SELECT i.ref_ent,u.username,o.poste,i.date_ent,i.heure_ent,i.etat from interview i Join offres_ent o on i.offre_id=o.offre_id Join Users u on o.id_entreprise=u.id where o.id_condidat=:idt";
        $statement=$em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue(':idt',$id);
        $statement->execute();
        $result=$statement->fetchAll();
        return $result;

    }

    public function getUsersByEntreprise($id){
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "SELECT o.id_condidat from offres_ent o where o.id_entreprise=:idt";
        $statement=$em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('idt',$id);
        $statement->execute();
        $result=$statement->fetchAll();
        return $result;

    }


    public function afficherEntretienss($id)
    {
        $em= $query=$this->getEntityManager();
        $RAW_QUERY = "SELECT i.ref_ent,u.username,o.poste,i.date_ent,i.heure_ent,i.etat from interview i Join offres_ent o on i.offre_id=o.offre_id Join Users u on o.id_condidat=u.id where o.id_entreprise=:idt and i.ref_ent not IN(SELECT i.ref_ent from evaluation e join interview i ON e.ref_entretien=i.ref_ent )";
        $statement=$em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('idt',$id);
        $statement->execute();
        $result=$statement->fetchAll();
        return $result;

    }

}
